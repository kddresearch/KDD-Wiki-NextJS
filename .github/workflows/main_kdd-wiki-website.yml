# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - kdd-wiki-website

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      run: |
        docker buildx create --use --driver-opt network=host --name mybuilder
        docker buildx inspect --bootstrap

    - name: Setup Google DNS
      run: |
         echo "nameserver 8.8.8.8" |  sudo tee  /etc/resolv.conf.DNSoverride
         sudo ln -sf /etc/resolv.conf.DNSoverride /etc/resolv.conf
         cat /etc/resolv.conf
    
    # - name: Lookup Registry IP
    #   id: lookup_ip
    #   run: |
    #     REGISTRY_IP=$(nslookup ${{ secrets.CONTAINERREGISTRY }} | grep Address | tail -n 1 | awk '{print $2}')
    #     echo "REGISTRY_IP=$REGISTRY_IP" >> $GITHUB_ENV
    
    # - name: Modify /etc/hosts
    #   run: |
    #     echo "${{ env.REGISTRY_IP }} ${{ secrets.CONTAINERREGISTRY }}" | sudo tee -a /etc/hosts
    #     cat /etc/hosts

    - name: Restart Docker
      run: sudo systemctl restart docker

    - name: Log in to registry
      uses: docker/login-action@v3
      with: 
        registry: ${{ secrets.CONTAINERREGISTRY }}
        username: ${{ secrets.CONTAINERREGISTRYUSERNAME }}
        password: ${{ secrets.CONTAINERREGISTRYPASSWORD }}

    - name: Create .env.local with secrets
      run: |
        echo $'AUTH_SECRET="${{ secrets.AUTH_SECRET }}"\n' >> .env.local
        echo $'AUTH_GOOGLE_CLIENT_ID="${{ secrets.AUTH_GOOGLE_CLIENT_ID }}"\n' >> .env.local
        echo $'AUTH_GOOGLE_CLIENT_SECRET="${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}"\n' >> .env.local
        echo $'AUTH_KSU_CLIENT_ID="${{ secrets.AUTH_KSU_CLIENT_ID }}"\n' >> .env.local
        echo $'AUTH_KSU_CLIENT_SECRET="${{ secrets.AUTH_KSU_CLIENT_SECRET }}"\n' >> .env.local
        echo $'DB_NAME="${{ secrets.DB_NAME }}"\n' >> .env.local
        echo $'DB_HOST="${{ secrets.DB_HOST }}"\n' >> .env.local
        echo $'DB_USERNAME="${{ secrets.DB_USERNAME }}"\n' >> .env.local
        echo $'DB_PASSWORD="${{ secrets.DB_PASSWORD }}"\n' >> .env.local
        echo $'LOADED=true\n' >> .env.local
        echo $'GITHUB_ACTIONS=true\n' >> .env.local
        echo $'BLOB_STORAGE_ACCOUNT_NAME="${{ secrets.BLOB_STORAGE_ACCOUNT_NAME }}"\n' >> .env.local
        echo $'BLOB_STORAGE_ACCOUNT_KEY="${{ secrets.BLOB_STORAGE_ACCOUNT_KEY }}"\n' >> .env.local
        echo $'BLOB_STORAGE_CONTAINER_NAME="${{ secrets.BLOB_STORAGE_CONTAINER_NAME }}"\n' >> .env.local

    # give permissions to the .env.local file
    - name: Give permissions to .env.local
      run: chmod 644 .env.local

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Get Runner IP
      run: |
        RUNNER_IP=$(curl -s https://api.ipify.org/)
        echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV

    - name: Whitelist Github Runner IP
      run: |
        echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV
        az postgres flexible-server firewall-rule create \
          --rule-name "Github_Action_Runner_${{ github.sha }}" \
          --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
          --name "${{ secrets.AZURE_DATABASE }}" \
          --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          --start-ip-address ${{ env.RUNNER_IP }} \
          --end-ip-address ${{ env.RUNNER_IP }} \
          --output "none"

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.CONTAINERREGISTRY }}/${{ secrets.CONTAINERREGISTRYUSERNAME }}/kdd-wiki:latest
        file: ./Dockerfile
        builder: mybuilder
        network: host

    - name: Whitelist Github Runner IP
      if: ${{ always() }}
      run: |
        az postgres flexible-server firewall-rule delete \
        --name "${{ secrets.AZURE_DATABASE }}" \
        --rule-name "Github_Action_Runner_${{ github.sha }}" \
        --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
        --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
        --output "none" \
        --yes

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: Azure/webapps-deploy@v3.0.1
        with:
          app-name: 'kdd-wiki-website'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_0a6678781b5e4a36850720ab95d56538 }}
          images: '${{ secrets.ContainerRegistry }}/${{ secrets.ContainerRegistryUsername }}/kdd-wiki:latest'
          slot-name: 'production'
          restart: true
