# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - kdd-wiki-website

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to registry
      uses: docker/login-action@v3
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.AzureAppService_ContainerUsername_a41569c48ae7481a82306bff846d04d0 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_168dfdb1e2474a84a79f72348365d322 }}

    - name: Create .env.local with secrets
      run: |
        echo $'AUTH_SECRET="${{ secrets.AUTH_SECRET }}"\n' >> .env.local
        echo $'AUTH_GOOGLE_CLIENT_ID="${{ secrets.AUTH_GOOGLE_CLIENT_ID }}"\n' >> .env.local
        echo $'AUTH_GOOGLE_CLIENT_SECRET="${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}"\n' >> .env.local
        echo $'AUTH_KSU_CLIENT_ID="${{ secrets.AUTH_KSU_CLIENT_ID }}"\n' >> .env.local
        echo $'AUTH_KSU_CLIENT_SECRET="${{ secrets.AUTH_KSU_CLIENT_SECRET }}"\n' >> .env.local
        echo $'DB_NAME="${{ secrets.DB_NAME }}"\n' >> .env.local
        echo $'DB_HOST="${{ secrets.DB_HOST }}"\n' >> .env.local
        echo $'DB_USERNAME="${{ secrets.DB_USERNAME }}"\n' >> .env.local
        echo $'DB_PASSWORD="${{ secrets.DB_PASSWORD }}"\n' >> .env.local
        echo $'LOADED=true\n' >> .env.local
        echo $'GITHUB_ACTIONS=true\n' >> .env.local

      # give permissions to the .env.local file
    - name: Give permissions to .env.local
      run: chmod 644 .env.local

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    # - task: AzureCLI@2
    #   displayName: Whitelist GitHub Runner IP
    #   inputs:
    #     azureSubscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #         az account show
    #         az storage -h

    - name: Get Runner IP
      run: |
        RUNNER_IP=$(curl -s https://api.ipify.org/)
        echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV

    - name: Whitelist GitHub Runner IP
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          set -eu
          az cosmosdb postgres firewall-rule create \
            --name "Github_Action_Runner_${{ github.sha }}" \
            --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
            --cluster-name "${{ secrets.AZURE_COSMOS_CLUSTER }}" \
            --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            --start-ip-address ${{ env.RUNNER_IP }} \
            --end-ip-address ${{ env.RUNNER_IP }}
          sleep 300

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.AzureAppService_ContainerUsername_a41569c48ae7481a82306bff846d04d0 }}/kdd-wiki:latest
        file: ./Dockerfile
        # secrets: |
        #   "AUTH_SECRET=${{ secrets.AUTH_SECRET }}"
        #   "AUTH_GOOGLE_CLIENT_ID=${{ secrets.AUTH_GOOGLE_CLIENT_ID }}"Microsoft.DBforPostgreSQL/serverGroupsv2/firewallRules/write
        #   "AUTH_GOOGLE_CLIENT_SECRET=${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}"
        #   "AUTH_KSU_CLIENT_ID=${{ secrets.AUTH_KSU_CLIENT_ID }}"
        #   "AUTH_KSU_CLIENT_SECRET=${{ secrets.AUTH_KSU_CLIENT_SECRET }}"
        #   "DB_NAME=${{ secrets.DB_NAME }}"
        #   "DB_HOST=${{ secrets.DB_HOST }}"
        #   "DB_USERNAME=${{ secrets.DB_USERNAME }}"
        #   "DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
      # run: |
      #   docker build . --tag ${{ secrets.AzureAppService_ContainerUsername_a41569c48ae7481a82306bff846d04d0 }}/kdd-wiki:latest
      #   docker push ${{ secrets.AzureAppService_ContainerUsername_a41569c48ae7481a82306bff846d04d0 }}/kdd-wiki:latest

    - name: Remove Whitelist For GitHub Runner IP
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          set -eu
          az cosmosdb postgres firewall-rule delete \
            --name "Github_Action_Runner_${{ github.sha }}" \
            --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
            --cluster-name "${{ secrets.AZURE_COSMOS_CLUSTER }}" \
            --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            --start-ip-address ${{ env.RUNNER_IP }} \
            --end-ip-address ${{ env.RUNNER_IP }}
          sleep 300

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: Azure/webapps-deploy@v3.0.1
        with:
          app-name: 'kdd-wiki-website'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_0a6678781b5e4a36850720ab95d56538 }}
          images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_a41569c48ae7481a82306bff846d04d0 }}/kdd-wiki:latest'
          slot-name: 'production'
          restart: true
